@model VM_CvAdd


@{
    ViewData["Title"] = "CvEdit";
    Layout = "~/Views/Shared/_MyAccountLayout.cshtml";
 
    var firstName = ViewData["FirstName"];
    var lastName = ViewData["LastName"];

}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Resume Page</title>
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- custom css -->
    <link rel="stylesheet" href="~/css/main.css">
</head>
<body>

    <section id="about-sc" class="">
        <div class="container">
            <div class="about-cnt">
                <form class="cv-form" method="post" id="cv-form" enctype="multipart/form-data">
                    <div class="cv-form-blk">
                        <div class="cv-form-row-title">
                            <h3>about section</h3>
                        </div>
                        <div class="cv-form-row cv-form-row-about">
                            <div class="cols-3">
                                <div class="form-elem">
                                    <label for="" class="form-label">First Name</label>
                                    <input name="CvNameSurname" type="text" class="form-control CvNameSurnam" id="" onkeyup="generateCV()" placeholder="e.g. John" asp-for="CvNameSurname">
                                    <span class="form-text"></span>
                                </div>

                                <div class="form-elem">
                                    <label for="" class="form-label">Your Image</label>
                                    <input type="file" name="formFile" class="form-control-file" onkeyup="generateCV()" asp-for="Image" id="exampleFormControlFile1">
                                </div>

                                <div class="form-elem">
                                    <label for="" class="form-label">Address</label>
                                    <input name="address" type="text" class="form-control address" id="" onkeyup="generateCV()" placeholder="e.g. Lake Street-23" asp-for="Address">
                                    <span class="form-text"></span>
                                </div>
                            </div>

                            <div class="cols-3">
                                <div class="form-elem">
                                    <label for="" class="form-label">Email</label>
                                    <input name="email" type="text" class="form-control email" id="" onkeyup="generateCV()" placeholder="e.g. johndoe@gmail.com" asp-for="tblUser.Email">
                                    <span class="form-text"></span>
                                </div>
                                <div class="form-elem">
                                    <label for="" class="form-label">Phone No:</label>
                                    <input name="PhoneNumber" type="text" class="form-control PhoneNumber" id="" onkeyup="generateCV()" placeholder="e.g. 456-768-798, 567.654.002" asp-for="tblUser.PhoneNumber">
                                    <span class="form-text"></span>
                                </div>
                                <div>
                                    <label for="" class="form-label">Title</label>
                                    <input name="Title" type="text" class="form-control Title" id="" onkeyup="generateCV()" placeholder="e.g. Web Developer" asp-for="Title">
                                    <span class="form-text"></span>
                                </div>
                            </div>
                            <div class="cols-3">
                                <div class="form-elem">
                                    <label for="" class="form-label">Summary</label>
                                    <textarea name="Summary" type="text" class="form-control Summary" id="" onkeyup="generateCV()" placeholder="e.g. Doe" asp-for="Summary"></textarea>
                                    <span class="form-text"></span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- <div class="cv-form-blk">
                        <div class = "cv-form-row-title">
                            <h3>achievements</h3>
                        </div>

                        <div class = "row-separator repeater">
                            <div class = "repeater" data-repeater-list = "group-a">
                                <div data-repeater-item>
                                    <div class = "cv-form-row cv-form-row-achievement">
                                        <div class = "cols-2">
                                            <div class = "form-elem">
                                                <label for = "" class = "form-label">Title</label>
                                                <input name = "achieve_title" type = "text" class = "form-control achieve_title" id = "" onkeyup="generateCV()" placeholder="e.g. johndoe@gmail.com">
                                                <span class="form-text"></span>
                                            </div>
                                            <div class = "form-elem">
                                                <label for = "" class = "form-label">Description</label>
                                                <input name = "achieve_description" type = "text" class = "form-control achieve_description" id = "" onkeyup="generateCV()" placeholder="e.g. johndoe@gmail.com">
                                                <span class="form-text"></span>
                                            </div>
                                        </div>
                                        <button data-repeater-delete type = "button" class = "repeater-remove-btn">-</button>
                                    </div>
                                </div>
                            </div>
                            <button type = "button" data-repeater-create value = "Add" class = "repeater-add-btn">+</button>
                        </div>
                    </div> -->

                    <div class="cv-form-blk">
                        <div class="cv-form-row-title">
                            <h3>experience</h3>
                        </div>

                        <div class="row-separator repeater" id="expInputs">
                            <div class="repeater" data-repeater-list="ExperienceInfos" id="experienceInputs">
                               @* @for (int i = 0; i < Model.Experiences.Count; i++)
                                {
                                    <div data-repeater-item>
                                        <div class="cv-form-row cv-form-row-experience">
                                            <div class="cols-3">
                                                <div class="form-elem">
                                                    <label for="" class="form-label">Pozisyon</label>
                                                    <input name="ExperienceInfos[@i].Position" type="text" class="form-control exp_title" id="" value="@Model.Experiences[i].Position" onkeyup="generateCV()">
                                                    <span class="form-text"></span>
                                                </div>
                                                <div class="form-elem">
                                                    <label for="" class="form-label">Company / Organization</label>
                                                    <input name="ExperienceInfos[@i].Company" type="text" class="form-control exp_organization" id="" value="@Model.Experiences[i].Company" onkeyup="generateCV()">
                                                    <span class="form-text"></span>
                                                </div>
                                            </div>

                                            <div class="cols-3">
                                                <div class="form-elem">
                                                    <label for="" class="form-label">Start Date</label>
                                                    <input name="ExperienceInfos[@i].StartDate" type="date" class="form-control exp_start_date" id="" value="@Model.Experiences[i].StartDate" onkeyup="generateCV()">
                                                    <span class="form-text"></span>
                                                </div>
                                                <div class="form-elem">
                                                    <label for="" class="form-label">End Date</label>
                                                    <input name="ExperienceInfos[@i].EndDate" type="date" class="form-control exp_end_date" id="" value="@Model.Experiences[i].EndDate" onkeyup="generateCV()">
                                                    <span class="form-text"></span>
                                                </div>
                                                <div class="form-elem">
                                                    <label for="" class="form-label">Description</label>
                                                    <input name="ExperienceInfos[@i].Responsibilities" type="text" class="form-control exp_description" id="" value="@Model.Experiences[i].Responsibilities" onkeyup="generateCV()">
                                                    <span class="form-text"></span>
                                                </div>
                                            </div>

                                            <button data-repeater-delete type="button" class="repeater-remove-btn">-</button>
                                        </div>
                                    </div>
                                }*@
                            </div>
                            <button type="button" id="addexp" class="repeater-add-btn">+</button>
                        </div>

                    </div>

                    <div class="cv-form-blk">
                        <div class="cv-form-row-title">
                            <h3>education</h3>
                        </div>

                        <div class="row-separator repeater">
                            <div class="repeater" data-repeater-list="group-c" id="educationInputs">
                              @*  @for (int i = 0; i < Model.EducationInfos.Count; i++)
                                {
                                    <div data-repeater-item>
                                        <div class="cv-form-row cv-form-row-experience">
                                            <div class="cols-3">
                                                <div class="form-elem">
                                                    <label for="" class="form-label">School</label>
                                                    <input name="EducationInfos[@i].School" type="text" class="form-control edu_school" id="" value="@Model.EducationInfos[i].School" onkeyup="generateCV()">
                                                    <span class="form-text"></span>
                                                </div>
                                                <div class="form-elem">
                                                    <label for="" class="form-label">Degree</label>
                                                    <input name="EducationInfos[@i].Degree" type="text" class="form-control edu_degree" id="" value="@Model.EducationInfos[i].Degree" onkeyup="generateCV()">
                                                    <span class="form-text"></span>
                                                </div>
                                                <div class="form-elem">
                                                    <label for="" class="form-label">Bölüm</label>
                                                    <input name="EducationInfos[@i].Major" type="text" class="form-control edu_city" id="" value="@Model.EducationInfos[i].Major" onkeyup="generateCV()">
                                                    <span class="form-text"></span>
                                                </div>
                                            </div>

                                            <div class="cols-3">
                                                <div class="form-elem">
                                                    <label for="" class="form-label">Start Date</label>
                                                    <input name="EducationInfos[@i].StartDate" type="date" class="form-control edu_start_date" id="" value="@Model.EducationInfos[i].StartDate" onkeyup="generateCV()">
                                                    <span class="form-text"></span>
                                                </div>
                                                <div class="form-elem">
                                                    <label for="" class="form-label">End Date</label>
                                                    <input name="EducationInfos[@i].EndDate" type="date" class="form-control edu_graduation_date" id="" value="@Model.EducationInfos[i].EndDate" onkeyup="generateCV()">
                                                    <span class="form-text"></span>
                                                </div>
                                            </div>

                                            <button data-repeater-delete type="button" class="repeater-remove-btn">-</button>
                                        </div>
                                    </div>
                                }*@
                            </div>
                            <button type="button" id="addEducation" class="repeater-add-btn">+</button>
                        </div>
                    </div>

                    <div class="cv-form-blk">
                        <div class="cv-form-row-title">
                            <h3>Dil Ekle</h3>
                        </div>

                        <div class="row-separator repeater" id="languagesInputs">
                            <div class="repeater" data-repeater-list="Skills" id="languageInputs">
                                @*@foreach (var skill in Model.Skills)
                                {
                                <div data-repeater-item>
                                <div class="cv-form-row cv-form-row-skills">
                                <div class="form-elem">
                                <label for="" class="form-label">Skill</label>
                                <input name="Skills[@Model.Skills.IndexOf(skill)].SkillName" type="text" class="form-control skill" id="" value="@skill.SkillName" onkeyup="generateCV()">
                                <span class="form-text"></span>
                                </div>

                                <button data-repeater-delete type="button" class="repeater-remove-btn">-</button>
                                </div>
                                </div>
                                }*@
                            </div>
                            <button type="button" class="repeater-add-btn" id="addLanguage">+</button>
                        </div>
                    </div>

                    <div class="cv-form-blk">
                        <div class="cv-form-row-title">
                            <h3>Yetenek Ekle</h3>
                        </div>

                        <div class="row-separator repeater" id="skillsInputs">
                            <div class="repeater" data-repeater-list="Skills" id="skillInputs">
                                @*@foreach (var skill in Model.Skills)
                                {
                                    <div data-repeater-item>
                                        <div class="cv-form-row cv-form-row-skills">
                                            <div class="form-elem">
                                                <label for="" class="form-label">Skill</label>
                                                <input name="Skills[@Model.Skills.IndexOf(skill)].SkillName" type="text" class="form-control skill" id="" value="@skill.SkillName" onkeyup="generateCV()">
                                                <span class="form-text"></span>
                                            </div>

                                            <button data-repeater-delete type="button" class="repeater-remove-btn">-</button>
                                        </div>
                                    </div>
                                }*@
                            </div>
                            <button type="button" class="repeater-add-btn" id="addskill">+</button>
                        </div>
                    </div>
                    <div class="cv-form-blk">
                        <div class="cv-form-row-title">
                            <h3>Hobi Ekle</h3>
                        </div>

                        <div class="row-separator repeater" id="skillsInputs">
                            <div class="repeater" data-repeater-list="Skills" id="hobbyInputs">
                                @*@foreach (var skill in Model.Skills)
                                {
                                <div data-repeater-item>
                                <div class="cv-form-row cv-form-row-skills">
                                <div class="form-elem">
                                <label for="" class="form-label">Skill</label>
                                <input name="Skills[@Model.Skills.IndexOf(skill)].SkillName" type="text" class="form-control skill" id="" value="@skill.SkillName" onkeyup="generateCV()">
                                <span class="form-text"></span>
                                </div>

                                <button data-repeater-delete type="button" class="repeater-remove-btn">-</button>
                                </div>
                                </div>
                                }*@
                            </div>
                            <button type="button" class="repeater-add-btn" id="addhobby">+</button>
                        </div>
                    </div>
                    <input type="hidden" id="stateInput" name="state" value="" />
                    <button type="submit" id="submitBtn" name="submit" value="CV Oluştur" class="btn-sub">Kaydet</button>
                </form>
            </div>
        </div>
    </section>
@*
    <section id="preview-sc" class="print_area">
        <div class="container">
            <div class="preview-cnt">
                <div class="preview-cnt-l bg-green text-white">
                    <div class="preview-blk">
                        <div class="preview-image">
                            <img src="" alt="" id="image_dsp">
                        </div>
                        <div class="preview-item preview-item-name">
                            <span class="preview-item-val fw-6" id="fullname_dsp"></span>
                        </div>
                        <div class="preview-item">
                            <span class="preview-item-val text-uppercase fw-6 ls-1" id="designation_dsp"></span>
                        </div>
                    </div>

                    <div class="preview-blk">
                        <div class="preview-blk-title">
                            <h3>about</h3>
                        </div>
                        <div class="preview-blk-list">
                            <div class="preview-item">
                                <span class="preview-item-val" id="PhoneNumber_dsp"></span>
                            </div>
                            <div class="preview-item">
                                <span class="preview-item-val" id="email_dsp"></span>
                            </div>
                            <div class="preview-item">
                                <span class="preview-item-val" id="address_dsp"></span>
                            </div>
                            <div class="preview-item">
                                <span class="preview-item-val" id="Summary_dsp"></span>
                            </div>
                        </div>
                    </div>

                    <div class="preview-blk">
                        <div class="preview-blk-title">
                            <h3>skills</h3>
                        </div>
                        <div class="skills-items preview-blk-list" id="skills_dsp">
                            <!-- skills list here -->
                        </div>
                    </div>
                </div>

                <div class="preview-cnt-r bg-white">
                    <div class="preview-blk">
                        <div class="preview-blk-title">
                            <h3>Achievements</h3>
                        </div>
                        <div class="achievements-items preview-blk-list" id="achievements_dsp"></div>
                    </div>

                    <div class="preview-blk">
                        <div class="preview-blk-title">
                            <h3>educations</h3>
                        </div>
                        <div class="educations-items preview-blk-list" id="educations_dsp"></div>
                    </div>

                    <div class="preview-blk">
                        <div class="preview-blk-title">
                            <h3>experiences</h3>
                        </div>
                        <div class="experiences-items preview-blk-list" id="experiences_dsp"></div>
                    </div>

                    <div class="preview-blk">
                        <div class="preview-blk-title">
                            <h3>projects</h3>
                        </div>
                        <div class="projects-items preview-blk-list" id="projects_dsp"></div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <section class="print-btn-sc">
        <div class="container">
            <button type="button" class="print-btn btn btn-primary" onclick="printCV()">Print CV</button>
        </div>
    </section>

    *@



    <!-- jquery cdn -->
    <script src="https://code.jquery.com/jquery-3.6.4.js" integrity="sha256-a9jBBRygX1Bh5lt8GZjXDzyOB+bWve9EiO7tROUtj/E=" crossorigin="anonymous"></script>
    <!-- jquery repeater cdn -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.repeater/1.2.1/jquery.repeater.js" integrity="sha512-bZAXvpVfp1+9AUHQzekEZaXclsgSlAeEnMJ6LfFAvjqYUVZfcuVXeQoN5LhD7Uw0Jy4NCY9q3kbdEXbwhZUmUQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <!-- custom js -->
    <script src="~/js/Scriptt.js"></script>
    <!-- app js -->
    <script src="~/js/app.js"></script>



    <!-- ########## All JS ########## -->
    <!-- jQuery js -->
    <script src="~/js/jquery.min.js"></script>
    <!-- Popper js -->
    <script src="~/js/popper.min.js"></script>
    <!-- Bootstrap js -->
    <script src="~/js/bootstrap.min.js"></script>
    <!-- All Plugins js -->
    <script src="~/js/plugins.js"></script>
    <!-- Parallax js -->
    <script src="~/js/dzsparallaxer.js"></script>
    <!-- Active js -->
    <script src="~/js/form-script.js"></script>
    <script src="~/js/script.js"></script>
    <script>
    document.getElementById('submitBtn').addEventListener('click', function() {
    var confirmation = confirm('CV\'nizi şirketlerle paylaşmak istiyor musunuz?');

    if (confirmation) {
    // Kullanıcı evet derse, state true yap ve kaydet
    document.getElementById('stateInput').value = true; // State input alanını true olarak ayarla
                document.getElementById('cv-form').submit(); // Formu gönder (formun ID'si "myForm" olarak varsayıldı)
    } else {
    // Kullanıcı hayır derse, state false yap ve kaydet
    document.getElementById('stateInput').value = false; // State input alanını false olarak ayarla
                document.getElementById('cv-form').submit(); // Formu gönder (formun ID'si "myForm" olarak varsayıldı)
    }
    });
    </script>
    <script>
    
        var counter = 0; // Eğitim giriş alanları sayacı
        var educationContainer = document.getElementById('educationInputs');
        var addButton = document.getElementById('addEducation');

        addButton.addEventListener('click', function () {
            var newEducation = document.createElement('div');
            newEducation.className = 'new-edu';

            newEducation.innerHTML = `
                       <div data-repeater-item>
                                                <div class="cv-form-row cv-form-row-experience">
                                                    <div class="cols-3">
                                                        <div class="form-elem">
                                                            <label for="" class="form-label">School</label>
                                                                    <input name="EducationInfos[${counter}].School" type="text" class="form-control edu_school" id="" onkeyup="generateCV()">
                                                            <span class="form-text"></span>
                                                        </div>
                                                        <div class="form-elem">
                                                            <label for="" class="form-label">Degree</label>
                                                                    <input name="EducationInfos[${counter}].Degree" type="text" class="form-control edu_degree" id=""  onkeyup="generateCV()">
                                                            <span class="form-text"></span>
                                                        </div>
                                                        <div class="form-elem">
                                                            <label for="" class="form-label">Bölüm</label>
                                                                    <input name="EducationInfos[${counter}].Major" type="text" class="form-control edu_city" id="" onkeyup="generateCV()">
                                                            <span class="form-text"></span>
                                                        </div>
                                                    </div>

                                                    <div class="cols-3">
                                                        <div class="form-elem">
                                                            <label for="" class="form-label">Start Date</label>
                                                                    <input name="EducationInfos[${counter}].StartDate" type="date" class="form-control edu_start_date" id="" onkeyup="generateCV()">
                                                            <span class="form-text"></span>
                                                        </div>
                                                        <div class="form-elem">
                                                            <label for="" class="form-label">End Date</label>
                                                                    <input name="EducationInfos[${counter}].EndDate" type="date" class="form-control edu_graduation_date" id="" onkeyup="generateCV()">
                                                            <span class="form-text"></span>
                                                        </div>
                                                    </div>

                                                    <button data-repeater-delete type="button" class="repeater-remove-btn">-</button>
                                                </div>
                                            </div>
            `;
            var educationContainer = document.getElementById('educationInputs');
            var addButton = document.getElementById('addEducation');

            newEducation.querySelector('.cv-form-row-experience').addEventListener('click', function (e) {
                if (e.target && e.target.classList.contains('repeater-remove-btn')) {
                    var educationToRemove = e.target.closest('.new-edu');
                    educationToRemove.remove();

                    // Update indexes after removing an education item
                    var educationItems = educationContainer.querySelectorAll('.new-edu');
                    educationItems.forEach(function (education, index) {
                        var inputs = education.querySelectorAll('input');
                        inputs.forEach(function (input) {
                            var name = input.getAttribute('name');
                            var updatedName = name.replace(/\[\d+\]/, `[${index}]`);
                            input.setAttribute('name', updatedName);
                        });
                    });

                    // Call function to update the model with the new education list
                    updateEducationModel();
                }
            });

            educationContainer.appendChild(newEducation);
            counter++; // Her tıklamada sayaç artar, yeni inputlar farklı indeks numaraları alır
        });

        function updateEducationModel() {
            var educationItems = educationContainer.querySelectorAll('.new-edu');
            var updatedEducationInfos = [];

            educationItems.forEach(function (education) {
                var inputs = education.querySelectorAll('input');
                var educationInfo = {};

                inputs.forEach(function (input) {
                    var name = input.getAttribute('name');
                    var value = input.value;
                    educationInfo[name.split('.')[1]] = value;
                });

                updatedEducationInfos.push(educationInfo);
            });

            // Güncellenmiş eğitim bilgileri burada updatedEducationInfos değişkeninde bulunur
            // Örneğin, bu bilgileri bir API'ye göndermek için:
            fetch('/api/updateEducationInfos', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(updatedEducationInfos)
            })
                .then(response => {
                    if (response.ok) {
                        console.log('Updated education information sent successfully.');
                        // Başarılı durumu işleyin
                    } else {
                        console.error('Failed to send updated education information.');
                        // Başarısız durumu işleyin
                    }
                })
                .catch(error => {
                    console.error('Error sending updated education information:', error);
                    // Hata durumunu işleyin
                });
        }
       
    </script>
    <script>

        var counter1 = 0; // Eğitim giriş alanları sayacı
        var expContainer = document.getElementById('expInputs');
        var addButton = document.getElementById('addexp');

        addButton.addEventListener('click', function () {
            var newExp = document.createElement('div');
            newExp.className = 'new-exp';

            newExp.innerHTML = `
                                                <div data-repeater-item>
                                                        <div class="cv-form-row cv-form-row-experience">
                                                            <div class="cols-3">
                                                                <div class="form-elem">
                                                                    <label for="" class="form-label">Pozisyon</label>
                                                                                    <input name="Experiences[${counter1}].Position"  type="text" class="form-control exp_title" id="" onkeyup="generateCV()">
                                                                    <span class="form-text"></span>
                                                                </div>
                                                                <div class="form-elem">
                                                                    <label for="" class="form-label">Company / Organization</label>
                                                                                    <input name="Experiences[${counter1}].Company" type="text" class="form-control exp_organization" id=""  onkeyup="generateCV()">
                                                                    <span class="form-text"></span>
                                                                </div>
                                                            </div>

                                                            <div class="cols-3">
                                                                <div class="form-elem">
                                                                    <label for="" class="form-label">Start Date</label>
                                                                                    <input name="Experiences[${counter1}].StartDate" type="date" class="form-control exp_start_date" id="" onkeyup="generateCV()">
                                                                    <span class="form-text"></span>
                                                                </div>
                                                                <div class="form-elem">
                                                                    <label for="" class="form-label">End Date</label>
                                                                                    <input name="Experiences[${counter1}].EndDate" type="date" class="form-control exp_end_date" id=""  onkeyup="generateCV()">
                                                                    <span class="form-text"></span>
                                                                </div>
                                                                <div class="form-elem">
                                                                    <label for="" class="form-label">Description</label>
                                                                                    <input name="Experiences[${counter1}].Responsibilities" type="text" class="form-control exp_description" id=""  onkeyup="generateCV()">
                                                                    <span class="form-text"></span>
                                                                </div>
                                                            </div>

                                                            <button data-repeater-delete type="button" class="repeater-remove-btn">-</button>
                                                        </div>
                                                    </div>
                            `;

           
            var expContainer = document.getElementById('expInputs');
            var addButton = document.getElementById('addexp');
            newExp.querySelector('.cv-form-row-experience').addEventListener('click', function (e) {
                if (e.target && e.target.classList.contains('repeater-remove-btn')) {
                    var expToRemove = e.target.closest('.new-exp');
                    expToRemove.remove();
                    //
                    var expItems = expContainer.querySelectorAll('.new-exp');
                           expItems.forEach(function (experience, index) {
                               var inputs = experience.querySelectorAll('input');
                               inputs.forEach(function (input) {
                                    var name = input.getAttribute('name');
                                var updatedName = name.replace(/\[\d+\]/, `[${index}]`);
                                 input.setAttribute('name', updatedName);
                             });
                         });
                    updateExperienceModel();
                }
            });
            expContainer.appendChild(newExp);
            counter1++;
        });



        function updateExperienceModel() {
            var expItems = expContainer.querySelectorAll('.new-exp');
            var updatedExperienceInfos = [];

            expItems.forEach(function (experience) {
                var inputs = experience.querySelectorAll('input');
                var experienceInfo = {};

                inputs.forEach(function (input) {
                    var name = input.getAttribute('name');
                    var value = input.value;
                    experienceInfo[name.split('.')[1]] = value;
                });

                updatedExperienceInfos.push(experienceInfo);
            });

            fetch('/api/updateExperienceInfos', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(updatedExperienceInfos)
            })
                .then(response => {
                    if (response.ok) {
                        console.log('Updated experience information sent successfully.');
                    } else {
                        console.error('Failed to send updated experience information.');
                    }
                })
                .catch(error => {
                    console.error('Error sending updated experience information:', error);
                });
        }
    </script>

    <script>

        var counter2 = 0; // Beceri giriş alanları sayacı
        var skillContainer = document.getElementById('skillInputs');
        var addButton = document.getElementById('addskill');

        addButton.addEventListener('click', function () {
            var newSkill = document.createElement('div');
            newSkill.className = 'newskill';

            newSkill.innerHTML = `
                <div data-repeater-item>
                    <div class="cv-form-row cv-form-row-skills">
                        <div class="form-elem">
                            <label for="" class="form-label">Yetenek Ekle</label>
                            <input name="Skills[${counter2}].SkillName" type="text" class="form-control skill" onkeyup="generateCV()">
                            <span class="form-text"></span>
                        </div>
                        <div class="form-elem">
                            <label for="" class="form-label">Seviye Seçiniz</label>
                            <select name="Skills[${counter2}].Level" class="form-control skill-level">
                                        <option value="TEMEL SEVİYE">TEMEL SEVİYE</option>
                                        <option value="ORTA SEVİYE">ORTA SEVİYE</option>
                                        <option value="İLERİ SEVİYE">İLERİ SEVİYE</option>
                                <!-- Diğer seviyeleri buraya ekleyebilirsiniz -->
                            </select>
                        </div>
                        <button data-repeater-delete type="button" class="repeater-remove-btn">-</button>
                    </div>
                </div>`;

            skillContainer.appendChild(newSkill);
            counter2++; // Her tıklamada sayaç artar, yeni inputlar farklı indeks numaraları alır

            // Remove button event listeners
            newSkill.querySelector('.repeater-remove-btn').addEventListener('click', function () {
                newSkill.remove();
                // Burada indeks numaralarını güncelliyoruz
                updateSkillIndexes();
            });
        });

        function updateSkillIndexes() {
            var skills = skillContainer.querySelectorAll('.newskill');
            skills.forEach(function (skill, index) {
                skill.querySelector('.skill').setAttribute('name', `Skills[${index}].SkillName`);
                skill.querySelector('.skill-level').setAttribute('name', `Skills[${index}].Level`);
            });
        }


    </script>
    <script>

        var counter3 = 0; // Eğitim giriş alanları sayacı
        var hobbyContainer = document.getElementById('hobbyInputs');
        var addButton = document.getElementById('addhobby');

        addButton.addEventListener('click', function () {
            var newHobby = document.createElement('div');
            newHobby.className = 'newhobby';

            newHobby.innerHTML = `
                                                                                <div data-repeater-item>
                                                        <div class="cv-form-row cv-form-row-skills">
                                                            <div class="form-elem">
                                                                <label for="" class="form-label">Yeni Hobi</label>
                                                                    <input name="Hobbies[${counter3}].HobbyName" type="text" class="form-control hobby" onkeyup="generateCV()">
                                                                <span class="form-text"></span>
                                                            </div>

                                                            <button data-repeater-delete type="button" class="repeater-remove-btn">-</button>
                                                        </div>
                                                    </div>

                                            `;
            var removeButtons = hobbyContainer.querySelectorAll('.repeater-remove-btn');
            removeButtons.forEach(function (button) {
                button.addEventListener('click', async function () {
                    var hobiToRemove = this.closest('.newhobby');
                    hobiToRemove.remove();

                    // Burada indeks numaralarını güncelliyoruz
                    var hobbies = hobbyContainer.querySelectorAll('.newhobby');
                    hobbies.forEach(function (hobby, index) {
                        var input = hobby.querySelector('.hobby');
                        input.setAttribute('name', `Hobbies[${index}].HobbyName`);
                    });

                    // Güncellenmiş skill listesini alıp modele gönder
                    var updatedHobbies = [];
                    hobbies.forEach(function (hobby, index) {
                        var input = hobby.querySelector('.hobby');
                        updatedHobbies.push({
                            HobbyName: input.value // veya uygun property adını kullanın
                        });
                    });

                    // API'ye güncellenmiş skill listesini gönder
                    try {
                        const response = await fetch('/api/hobbies/update', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(updatedHobbies)
                        });

                        if (response.ok) {
                            console.log('Hobbies updated successfully');
                        } else {
                            console.error('Failed to update hobbies');
                        }
                    } catch (error) {
                        console.error('Error updating hobbies', error);
                    }
                });
            });

            hobbyContainer.appendChild(newHobby);
            counter3++; // Her tıklamada sayaç artar, yeni inputlar farklı indeks numaraları alır


      



        });

    </script>
    <script>
        var counter4 = 0; // dil giriş alanları sayacı
        var languageContainer = document.getElementById('languageInputs');
        var addButton = document.getElementById('addLanguage');

        addButton.addEventListener('click', function () {
            var newLanguage = document.createElement('div');
            newLanguage.className = 'newLanguage';

            newLanguage.innerHTML = `

                                                                <div data-repeater-item>
                                                        <div class="cv-form-row cv-form-row-skills">
                                                            <div class="form-elem">
                                                                <label for="" class="form-label">Yeni Dil Ekle</label>
                                                                    <input name="Languages[${counter4}].LanguageName" type="text" class="form-control language" onkeyup="generateCV()">
                                                                <span class="form-text"></span>
                                                            </div>
                                                                    <div class="form-elem">
                                <label for="" class="form-label">Dil Seviyesi</label>
                <select name="Languages[${counter4}].LanguageLevel" class="form-control language-level" style=" height: 4rem;">
                                    <option value="TEMEL SEVİYE">TEMEL SEVİYE</option>
                                    <option value="ORTA SEVİYE">ORTA SEVİYE</option>
                                    <option value="İLERİ SEVİYE">İLERİ SEVİYE</option>
                                  
                                    <!-- Diğer seviyeleri buraya ekleyebilirsiniz -->
                                </select>
                            </div>
                                                            <button data-repeater-delete type="button" class="repeater-remove-btn">-</button>
                                                        </div>
                                                    </div>
                                            `;

            var removeButtons = languageContainer.querySelectorAll('.repeater-remove-btn');
            removeButtons.forEach(function (button) {
                button.addEventListener('click', async function () {
                    var languageToRemove = this.closest('.newLanguage');
                    languageToRemove.remove();

                    // Burada indeks numaralarını güncelliyoruz
                    var languages = languageContainer.querySelectorAll('.newLanguage');
                    languages.forEach(function (language, index) {
                        var input = language.querySelector('.language');
                        input.setAttribute('name', `Languages[${index}].LanguageName`);
                    });

                    // Güncellenmiş skill listesini alıp modele gönder
                    var updatedLanguages = [];
                    languages.forEach(function (language, index) {
                        var input = language.querySelector('.language');
                        updatedLanguages.push({
                            LanguageName: input.value // veya uygun property adını kullanın
                        });
                    });

                    // API'ye güncellenmiş skill listesini gönder
                    try {
                        const response = await fetch('/api/languages/update', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(updatedLanguages)
                        });

                        if (response.ok) {
                            console.log('Languages updated successfully');
                        } else {
                            console.error('Failed to update languages');
                        }
                    } catch (error) {
                        console.error('Error updating languages', error);
                    }
                });
            });

            languageContainer.appendChild(newLanguage);
            counter4++; // Her tıklamada sayaç artar, yeni inputlar farklı indeks numaraları alır



        });

    </script>
  @*  <script>
        const cvElements = {
            nameCV: 'nameCV',
            jobTitle: 'jobTitle',
            webSite: 'webSite',
            phone: 'phone',
            comments: 'comments',
            email: 'email',
            adress:'adress',
            unvan:'unvan',
            sirket:'sirket',
            isBaslamaYili:'isBaslamaYili',
            isBitisYili:'isBitisYili',
            isAciklama:'isAciklama',
            yetenek:'yetenek',
            yeterlilik:'yeterlilik',
            bolum:'bolum',
            okul:'okul',
            derece:'derece',
            hobi:'hobi',
        };

        function updateCV(elementId, value) {
            const targetElement = cvElements[elementId];
            if (targetElement) {
                document.getElementById(targetElement).innerText = value;
            }
            else {
                console.log('Element ID not recognized');
            }
        }
        //let hobbies = [];

        //// Ekranda ilgi alanlarını gösteren işlev
        //function displayHobbies() {
        //    const hobiElement = document.getElementById(cvElements.hobi);
        //    hobiElement.innerHTML = hobbies.map(hobi => `<li>${hobi}</li>`).join('');
        //}

        //// Her ilgi alanı girişi yapıldığında bu olay tetiklenecek
        //$('.add-hoppies').on('click', function () {
        //    const newHobby = $('.form-control').last().val();
        //    if (newHobby.trim() !== '') {
        //        hobbies.push(newHobby); // Yeni ilgi alanını diziye ekle
        //        displayHobbies(); // Güncel ilgi alanlarını ekrana yazdır
              
        //    }
        //});
  

        
    </script>*@
</body>

</html>


