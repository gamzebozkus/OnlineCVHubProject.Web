@model VM_Request_CompanyRegister
@{
    ViewData["Title"] = "CvAra";
    Layout = "~/Views/Shared/_CompanyLayout.cshtml";
}
<head>
    <style>
     
        .sonuc-kartlari {
            display: flex;
            flex-wrap: wrap;
            gap: 10px; /* Kartlar arasındaki boşluk */
        }

        .sonuc-karti {
            cursor: pointer;
            border: 1px solid #ccc;
            padding: 10px;
            min-width: 150px;
            text-align: center;
            transition: transform 0.3s ease-in-out;
        }

            .sonuc-karti:hover {
                transform: scale(1.1); /* Kartı büyütme efekti */
            }

        .cv-detay-popup {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: white;
            padding: 20px;
            box-shadow: -21px 24px 71px 10px rgb(6 5 5);
        }

        .selected-item {
            color: #ffa570; /* Seçilen özellikler için turuncu renk */
        }

        .remove-button {
            margin-left:8px;
            color: red; /* İptal butonu için kırmızı renk */
        }

        .selected-experience-level {
            color: #ffa570; /* Seçilen deneyim seviyeleri için turuncu renk */
        }

        .remove-experience-level-button {
            margin-left: 8px;
            color: red; /* İptal butonu için kırmızı renk */
        }

    </style>
    <link href="~/admincss/cvcard.css" rel="stylesheet" />
</head>


<div class="col-lg-6">
    <div class="card" style="
        width: 125vh;
        background: #075252;
       
        border-radius: 30px;
      
        ">
        <div class="card-header" style="border-radius:33px;">
            <strong style="color:white;">CV ARAMA FORMU</strong>
        </div>
        <div class="card-body card-block">
            <form action="@Url.Action("CvAra", "CompanyAccount")" method="post" enctype="multipart/form-data" class="form-horizontal">

                <div class="row form-group">
                    <div class="col col-md-3">
                        <label class=" form-control-label">Unvan</label>
                    </div>
                    <div class="col-12 col-md-9">
                        @if (Model.DepartmentName != null)
                        {
                            <p style="color:navajowhite; font-weight:100;" class="form-control-static" name="departmanName">@Model.DepartmentName.FirstOrDefault()</p>
                            <input type="hidden" name="departmentName" value="@Model.DepartmentName.FirstOrDefault()" />
                        }
                        else
                        {
                            <p class="form-control-static">Department name not available</p>
                        }
                    </div>
                </div>

                <div class="row form-group">
                    <div class="col col-md-3">
                        <label for="text-input" class=" form-control-label">Aradığınız Yetenekleri Yazın</label>
                    </div>
                    <div class="col-12 col-md-9">
                        <div id="skills-container">
                            <input style="border-radius: 35px; background-color: #F8FAE5;" type="text" id="skills" name="skills[]" placeholder="MS Excel vs. gibi" class="form-control">
                        </div>
                        <br />
                        <button type="button" style="background-color:#ff7a00" id="add-skill" class="btn btn-primary">Yetenek Ekle</button>

                    </div>
                </div>
              
            
                <div class="row form-group">
                    <div class="col col-md-3">
                        <label for="text-input" class=" form-control-label">Sahip olunmasını istediğiniz dil varsa ekleyin</label>
                    </div>
                    <div class="col-12 col-md-9">
                        <div id="languages-container">
                            <input type="text" style="border-radius: 35px; background-color: #F8FAE5;" id="languages" name="languages[]" placeholder="İngilizce vs. gibi" class="form-control">

                        </div>
                        <br/>
                        <button type="button" style="background-color:#ff7a00" id="add-language" class="btn btn-primary">Dil Ekle</button>

                    </div>
                </div>

                <div class="row form-group">
                    <div class="col col-md-3">
                        <label for="select" class="form-control-label">Kişilik Özelliği Seç</label>
                    </div>
                    <div class="col-12 col-md-9">

                        <select name="ozellik[]" style="border-radius: 35px; background-color: #F8FAE5; height: 15vh;  overflow-y: hidden;    padding: 16px;" id="ozellikSelect" class="form-control" multiple>
                            <option value="Özgüvenli">Özgüvenli</option>
                            <option value="Yaratıcı">Yaratıcı</option>
                            <option value="Esnekliğe Uyumlu">Esnekliğe Uyumlu</option>
                            <option value="Meraklı">Meraklı</option>
                            <option value="Sorumluluk Sahibi">Sorumluluk Sahibi</option>
                        </select>

                        <div id="selectedOzellikler">
                            <input type="hidden" id="selectedOzelliklerInput" name="ozellik" />
                            <strong style="color:white">Seçilen Özellikler:</strong>
                            <ul id="selectedList"></ul>
                        </div>
                    </div>
                </div>
                <div class="row form-group">
                    <div class="col col-md-3">
                        <label for="experienceLevelSelect" class=" form-control-label">Deneyim Seviyesi Seçin</label>
                    </div>
                    <div class="col-12 col-md-9">
                        <select name="experienceLevel[]" id="experienceLevelSelect" style="border-radius: 35px; background-color: #F8FAE5; height: 15vh;  overflow-y: hidden;    padding: 16px;" class="form-control" multiple>
                            <option value="0-1">0-1 yıl deneyimli </option>
                            <option value="1-2">1-2 yıl deneyimli</option>
                            <option value="2-3">2-3 yıl deneyimli</option>
                            <option value="4+">4+ yıl deneyimli</option>
                        </select>
                        <input type="hidden" id="experienceLevelInput" name="experienceLevel">
                        <div id="selectedExperienceLevels">
                            <strong style="color:white;">Seçilen Deneyim Seviyeleri:</strong>
                            <ul id="experienceLevelList"></ul>
                        </div>
                    </div>
                </div>
             @*   <div class="row form-group">
                    <div class="col col-md-3">
                        <label for="select" class=" form-control-label">Kişilik Özelliği Seç</label>
                    </div>
                    <div class="col-12 col-md-9">
                        <select name="ozellik" id="select" class="form-control">
                            
                            <option name="ozellik" value="Özgüvenli">Özgüvenli</option>
                            <option name="ozellik" value="Yaratıcı">Yaratıcı</option>
                            <option name="ozellik" value="Esnekliğe Uyumlu">Esnekliğe Uyumlu</option>
                            <option name="ozellik" value="Meraklı">Meraklı</option>
                            <option name="ozellik" value="Sorumluluk Sahibi">Sorumluluk Sahibi</option>
                        </select>
                    </div>
                </div>*@
                <br />
                <div class="card-footer">

                    <button type="submit" class="btn btn-primary btn-sm" style="background-color:#ff7a00">
                        <i class="fa fa-dot-circle-o"></i> Ara
                    </button>
                </div>

            </form>
      
        </div>
    </div>
  
</div>
<div class="sonuc-bolumu">
    @if (Model.Sonuclar != null && Model.Sonuclar.Any())
    {
        <h2>Sonuçlar</h2>
  <div class="kart">
            @foreach (var sonuc in Model.Sonuclar)
            {
               
                    
                        <div class="business-card clearfix">
                            <div class="business-card-profile">
                                <img class="business-card-pic" src="@sonuc.Image" alt="profile picture" />
                                <br>
                        <p class="business-card-name">@sonuc.CvNameSurname</p>
                                <br>
                                <p class="business-card-title">@sonuc.Title</p>
                            </div>
                            <div class="business-card-arrow"></div>
                            <div class="business-card-details">
                                <p><i class="fa fa-desktop"></i><a class="business-card-link" href=" @Url.Action("GetCvDetails", "CompanyAccount", new { cvId = sonuc.CvId })">Cv'ye Ulaşmak için tıklayınız</a></p>
                              
                                <p><i class="fa fa-phone"></i>@sonuc.PhoneNum</p>
                                <p><i class="fa fa-phone"></i>@sonuc.Email</p>
                          
                                <p><i class="fa fa-hashtag"></i>@sonuc.Tags</p>
                              
                            </div>
                        </div>
                        

                 <br />
          
            }
 </div>
    }
</div>
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css">

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    var selectedExperienceLevels = [];

    document.getElementById('experienceLevelSelect').addEventListener('change', function () {
        var selectedList = document.getElementById('experienceLevelList');
        selectedList.innerHTML = ''; // Mevcut listeyi temizle

        var selectedOptions = Array.from(this.selectedOptions);
        selectedExperienceLevels = selectedOptions.map(option => option.value);

        selectedOptions.forEach(option => {
            addExperienceLevelToList(option.text, option.value);
        });

        // Seçilen deneyim seviyelerini saklamak için hidden input kullan
        var experienceLevelInput = document.getElementById('experienceLevelInput');
        experienceLevelInput.value = selectedExperienceLevels.join(',');
    });

    function addExperienceLevelToList(text, value) {
        var listItem = document.createElement('li');
        listItem.textContent = text;
        listItem.classList.add('selected-experience-level'); // Seçilen deneyim seviyeleri için stil sınıfı ekle

        var removeButton = document.createElement('button');
        removeButton.textContent = 'İptal';
        removeButton.classList.add('remove-experience-level-button'); // İptal butonu için stil sınıfı ekle
        removeButton.onclick = function () {
            removeExperienceLevel(value, listItem);
        };

        listItem.appendChild(removeButton);
        document.getElementById('experienceLevelList').appendChild(listItem);
    }

    function removeExperienceLevel(value, listItem) {
        var select = document.getElementById('experienceLevelSelect');
        var optionToDeselect = Array.from(select.options).find(option => option.value === value);
        optionToDeselect.selected = false;
        listItem.remove();

        var index = selectedExperienceLevels.indexOf(value);
        if (index !== -1) {
            selectedExperienceLevels.splice(index, 1);
        }

        // Seçilen deneyim seviyelerini güncelle
        var experienceLevelInput = document.getElementById('experienceLevelInput');
        experienceLevelInput.value = selectedExperienceLevels.join(',');
    }

</script>
<script>
    // Seçilen öğeleri saklamak için bir dizi oluştur
    var selectedItems = [];

    document.getElementById('ozellikSelect').addEventListener('change', function () {
        var selectedList = document.getElementById('selectedList');

        // Tüm seçili öğeleri al
        var selectedOptions = Array.from(this.selectedOptions);
        selectedOptions.forEach(option => {
            if (!selectedItems.includes(option.value)) {
                selectedItems.push(option.value);
                addToList(option.text, option.value);
            }
        });

        // Seçilen özellikleri güncellemek için hidden input alanını kullan
        var selectedOzelliklerInput = document.getElementById('selectedOzelliklerInput');
        selectedOzelliklerInput.value = selectedItems.join(',');
    });

    function addToList(text, value) {
        var listItem = document.createElement('li');
        listItem.textContent = text;
        listItem.setAttribute('data-value', value);
        listItem.classList.add('selected-item'); // Seçilen öğeler için stil sınıfı ekle

        // İptal etme işlevi için buton ekle
        var removeButton = document.createElement('button');
        removeButton.textContent = 'İptal';
        removeButton.classList.add('remove-button'); // İptal butonu için stil sınıfı ekle
        removeButton.onclick = function () {
            removeSelectedOption(value, listItem);
        };

        listItem.appendChild(removeButton);
        document.getElementById('selectedList').appendChild(listItem);
    }


    function removeSelectedOption(value, listItem) {
        var select = document.getElementById('ozellikSelect');
        select.value = ''; // Tüm seçenekleri temizle
        var index = selectedItems.indexOf(value);
        if (index !== -1) {
            selectedItems.splice(index, 1); // Seçilen öğeyi diziden kaldır
        }
        listItem.remove();

        // Seçilen özellikleri güncellemek için hidden input alanını kullan
        var selectedOzelliklerInput = document.getElementById('selectedOzelliklerInput');
        selectedOzelliklerInput.value = selectedItems.join(',');
    }
</script>




<script>
    document.getElementById('add-skill').addEventListener('click', function () {
        var skillsContainer = document.getElementById('skills-container');
        var newInput = document.createElement('div'); // Yeni bir div oluşturun
        newInput.classList.add('input-group', 'mb-3'); // Bootstrap için gerekli sınıfları ekleyin

        var inputElement = document.createElement('input');
        inputElement.type = 'text';
        inputElement.name = 'skills[]';
        inputElement.placeholder = 'Yetenek ekleyin';
        inputElement.className = 'form-control';

        var removeButton = document.createElement('button');
        removeButton.type = 'button';
        removeButton.className = 'btn btn-danger';
        removeButton.textContent = 'Sil';

        removeButton.addEventListener('click', function () {
            skillsContainer.removeChild(newInput); // Yetenek girişini sil
        });

        newInput.appendChild(inputElement);
        newInput.appendChild(removeButton);

        skillsContainer.appendChild(newInput);
    });
</script>
<script>
    document.getElementById('add-language').addEventListener('click', function () {
        var languagesContainer = document.getElementById('languages-container');
        var newInput = document.createElement('div'); // Yeni bir div oluşturun
        newInput.classList.add('input-group', 'mb-3'); // Bootstrap için gerekli sınıfları ekleyin

        var inputElement = document.createElement('input');
        inputElement.type = 'text';
        inputElement.name = 'languages[]';
        inputElement.placeholder = 'Başka bir dil ekleyin';
        inputElement.className = 'form-control';

        var removeButton = document.createElement('button');
        removeButton.type = 'button';
        removeButton.className = 'btn btn-danger';
        removeButton.textContent = 'Sil';

        removeButton.addEventListener('click', function () {
            languagesContainer.removeChild(newInput); // Dil girişini sil
        });

        newInput.appendChild(inputElement);
        newInput.appendChild(removeButton);

        languagesContainer.appendChild(newInput);
    });
</script>

<script>
    // Pop-up penceresini açma işlemi
    function openCvDetailsPopup(cvId) {
        $.ajax({
            url: '/CompanyAccount/GetCvDetails', // CV detaylarını alacak bir controller eylemi belirtin
            type: 'GET',
            data: { cvId: cvId },
            success: function (data) {
                $('.cv-detay-popup').html(data); // CV detayları için kısmi görünümü pop-up penceresine yerleştirin
                $('.cv-detay-popup').show(); // Pop-up penceresini göster
            },
            error: function (error) {
                console.error(error);
            }
        });
    }

    // Pop-up penceresini kapatma işlemi
    function closeCvDetailsPopup() {
        $('.cv-detay-popup').hide(); // Pop-up penceresini gizle
    }

</script>