@model VM_Request_CompanyRegister
@{
    ViewData["Title"] = "KaydedilenCvs";
    Layout = "~/Views/Shared/_CompanyLayout.cshtml";
}
<head>
    <style>
        a:hover{
            color: #b1ff09;
        }
        .sonuc-kartlari {
            display: flex;
            flex-wrap: wrap;
            gap: 10px; /* Kartlar arasındaki boşluk */
        }

        .sonuc-karti {
            cursor: pointer;
            border: 1px solid #ccc;
            padding: 10px;
            min-width: 150px;
            text-align: center;
            transition: transform 0.3s ease-in-out;
        }

            .sonuc-karti:hover {
                transform: scale(1.1); /* Kartı büyütme efekti */
            }

        .cv-detay-popup {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: white;
            padding: 20px;
            box-shadow: -21px 24px 71px 10px rgb(6 5 5);
        }

.business-card {
    width: 514px;
    height: 308px;
            background: #2b2f37;
    position: relative;
    border-radius: 50px;
}

.business-card-profile {
    float: left;
            background: #567582;
    width: 200px;
    height: 308px;
}

/* grayscale thanks to http://thenewcode.com/532/Convert-Images-To-Black-And-White-With-CSS */

.business-card-pic {
    width: 100px;
    display: block;
    padding: 3px;
    background: #303236;
    border-radius: 100px;
    border: solid 7px #54575f;
    margin: 0 auto;
    margin-top: 50px;
  /*  -webkit-filter: grayscale(100%);*/
    /*filter: grayscale(100%);
    filter: gray;
    filter: url("data:image/svg+xml;utf8,<svg version='1.1' xmlns='http://www.w3.org/2000/svg' height='0'><filter id='greyscale'><feColorMatrix type='matrix' values='0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0' /></filter></svg>#greyscale");*/
}

.business-card-name, .business-card-title {
    line-height: 0px;
    text-align: center;
    font-family: "dosis";
    color: white;
    font-size: 20px;
}

.business-card-name {
    font-weight: bold;
}

.business-card-title {
    color: #999999;
    line-height: 5px;
    font-size: 16px;
}

/* arrow thanks to : https://jsfiddle.net/josedvq/3HG6d/ */

.business-card-arrow {
    width: 0;
    height: 0;
    padding-top: 3%;
    padding-bottom: 3%;
    padding-left: 3%;
    overflow: hidden;
    position: absolute;
    top: calc(50% - 20px);
    left: 200px;
}

    .business-card-arrow:after {
        content: "";
        display: block;
        width: 0;
        height: 0;
        margin-top: -20px;
        margin-left: -20px;
        border-top: 20px solid transparent;
        border-bottom: 20px solid transparent;
        border-left: 20px solid #3D4045;
    }

/* -----------------
  Details(right side)
 ------------------- */
.business-card-details {
    float: right;
    font-family: "Montserrat";
    color: #e6e6e6;
    font-size: 13px;
    line-height: 20px;
    width: 280px;
    height: 283px;
    display: inline-block;
    overflow: hidden;
    margin-top: 25px;
}

    .business-card-details .fa {
        color: #d9d9d9;
        width: 20px;
        font-size: 20px;
        text-align: center;
        margin-right: 10px;
    }

.business-card-link {
    color: white;
    text-decoration: none;
}

.clearfix {
    overflow: auto;
    zoom: 1;
}
.kart{
    display:grid;
    grid-template-columns:repeat(4,1fr);
    grid-gap:10px;
}
label {
    color: navajowhite;
}

        .dropdown-content {
            display: none;
        }
        /* Olumlu düğme */
        .btn-positive {
            background-color: #112e0c; /* Koyu yeşil */
            color: white;
            transition: background-color 0.3s ease-in-out;
            width: 150px;
            height: 50px;
            border-radius: 12px;
        }

            .btn-positive:hover {
                background-color: #1b5e20; /* Daha açık bir yeşil tonu */
            }


        /* Olumsuz düğme */
        .btn-negative {
            background-color: #4a1818; /* Koyu kırmızı */
            color: white;
            transition: background-color 0.3s ease-in-out;
            width: 150px;
            height: 50px;
            border-radius: 12px;
        }

            .btn-negative:hover {
                background-color: #b71c1c; /* Daha açık bir kırmızı tonu */
            }

        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0,0,0,0.4);
        }

        .modal-content {
            background-color: #fefefe;
            margin: 15% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

            .close:hover,
            .close:focus {
                color: black;
                text-decoration: none;
                cursor: pointer;
            }
    </style>
    <link href="~/admincss/cvcard.css" rel="stylesheet" />
</head>

<div class="sonuc-bolumu">
    @if (Model.Sonuclar != null && Model.Sonuclar.Any())
    {
        <div class="kart">
            @foreach (var sonuc in Model.Sonuclar)
            {
                <div class="business-card clearfix" style=" background: #2b2f37;">
                    <div class="business-card-profile" style="background: #567582;">
                        <img class="business-card-pic" src="@sonuc.Image" alt="profile picture" />
                        <br>
                        <p class="business-card-name">@sonuc.CvNameSurname</p>
                        <br>
                        <p class="business-card-title">@sonuc.Title</p>
                    </div>
                    <div class="business-card-arrow"></div>
                    <div class="business-card-details">
                        <p><i class="fa fa-desktop"></i><a class="business-card-link" href="@Url.Action("CvDetails", "CompanyAccount", new { cvId = sonuc.CvId })">Cv'ye Ulaşmak için tıklayınız</a></p>
 <div class="dropdown" style="padding-bottom: -22px;padding-left: 243px; margin-top: -137px; position: fixed; padding-right: -33px; rotate: 43.5deg;">
                            <button class="dropbtn" style="padding-top: 4px;padding-left: 34px;color: #a7bbe0;font-size: xx-large;">
                                ▼
                            </button>
                            <div class="dropdown-content" style="display:none;background-color: rgb(18, 50, 61);width: 105px;height: 72px;position: fixed;display: block;font-size: larger;border-radius: 12px;border: 3px solid rgb(164, 173, 220);text-align: center; rotate: -43.5deg;margin-top: 8px;">
                                <a href="#" class="add-note" style="color: aliceblue;">Not Ekle</a>
                              

                                <a href="#" class="add-meeting" style="color: aliceblue;">Toplantı Ekle</a>
                            </div>
                        </div>
                        <p><i class="fa fa-phone"></i>@sonuc.PhoneNum</p>
                        <p><i class="fa fa-mail"></i>@sonuc.Email</p>
                        <br>
                        <!-- Butonları submit inputlarına çevirin -->
                        <form class="cvStateForm" method="post" action="/CompanyAccount/UpdateCvState">
                            @Html.Hidden("cvId", sonuc.CvId)
                            @Html.Hidden("state", true) <!-- Olumlu veya Olumsuz değeri burada değişecek -->
                    @Html.Hidden("departmentId", sonuc.DepartmentId)
                            <input type="submit" class="btn-positive" value="Olumlu Görüşme" data-state="true" />
                        </form>
                        <br>
                        <!-- Olumsuz düğme -->
                        <form class="cvStateForm" method="post" action="/CompanyAccount/UpdateCvState">
                            @Html.Hidden("cvId", sonuc.CvId)
                            @Html.Hidden("state", false) <!-- Olumlu veya Olumsuz değeri burada değişecek -->
                    @Html.Hidden("departmentId", sonuc.DepartmentId)
                            <input type="submit" class="btn-negative" value="Olumsuz Görüşme" data-state="false" />
                        </form>
                    </div>
                </div>
                <!-- Not Ekleme Modalı -->
                <div id="noteModal" class="modal">
                    <div class="modal-content">
                        <span class="close">&times;</span>
                        <form id="noteForm">
                            <input type="hidden" id="noteCvId" name="cvId" value="" />
                            <textarea id="noteText" name="note" style="width:100%;height:237%" placeholder="Notunuzu buraya yazınız"></textarea>
                            <input type="submit" value="Tamamla" />
                        </form>
                    </div>
                </div>
                <!--toplantı tarihi ekleme-->
                <div id="meetingModal" class="modal" style="display:none;">
                    <div class="modal-content">
                        <span class="close">&times;</span>
                        <form id="meetingForm">
                            <input type="hidden" id="meetingCvId" name="cvId" value="" />
                            <input style="width: 132px;height: 75px;padding-left: 10px;" type="date" id="meetingDate" name="meetingDate" />
                            <input style="padding-left: 60px;" type="time" id="meetingTime" name="meetingTime" />
                            <input style="padding-left: 60px;" type="text" id="meetingSubject" name="meetingSubject" placeholder="Toplantı Konusu" />
                            <input type="submit" value="Takvime Ekle" />
                        </form>
                    </div>
                </div>

                <br />
            }
        </div>
    }
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<script>
    $(document).ready(function () {
        // Sayfa yüklendiğinde tüm dropdown menüleri gizle
        $('.dropdown-content').css('display', 'none');
    });
</script>
<script>
    $(document).on('click', '.dropbtn', function () {
        // Açılır menüyü bul
        var dropdownContent = $(this).next('.dropdown-content');

        // Eğer açılır menü gizliyse, görünür yap
        if (dropdownContent.css('display') === 'none') {
            dropdownContent.css('display', 'block');
        } else {
            // Açılır menü zaten görünürse, gizle
            dropdownContent.css('display', 'none');
        }
    });
</script>
<script>
    $(document).on('click', '.btn-positive', function () {
        var state = $(this).data('state'); // "true"
        var departmentId = $(this).closest('form.cvStateForm').find('input[name="departmentId"]').val(); // departmanId'yi al
        $(this).closest('form.cvStateForm').find('input[name="state"]').val(state); // Sadece bu formun içindeki "state" inputuna "true" ata
        $(this).closest('form.cvStateForm').find('input[name="departmentId"]').val(departmentId); // Sadece bu formun içindeki "departmentId" inputuna departmanId'yi ata
    });

    $(document).on('click', '.btn-negative', function () {
        var state = $(this).data('state'); // "false"
        var departmentId = $(this).closest('form.cvStateForm').find('input[name="departmentId"]').val(); // departmanId'yi al
        $(this).closest('form.cvStateForm').find('input[name="state"]').val(state); // Sadece bu formun içindeki "state" inputuna "false" ata
        $(this).closest('form.cvStateForm').find('input[name="departmentId"]').val(departmentId); // Sadece bu formun içindeki "departmentId" inputuna departmanId'yi ata
    });
</script>
<script>
    $(document).ready(function () {
        // Sayfa yüklendiğinde Local Storage'dan değerleri oku ve buton renklerini ayarla
        $('.btn-positive, .btn-negative').each(function () {
            var cvId = $(this).closest('form').find('input[name="cvId"]').val();
            var storedState = localStorage.getItem('cvState_' + cvId);
            if (storedState !== null) {
                updateButtonColor($(this).closest('.business-card'), storedState === 'true');
            }
        });

        // Butonlara tıklandığında çalışacak fonksiyon
        $('.btn-positive, .btn-negative').click(function () {
            var button = $(this);
            var isPositive = button.hasClass('btn-positive');
            var card = button.closest('.business-card');
            var cvId = button.closest('form').find('input[name="cvId"]').val();

            // Local Storage'a değeri kaydet
            localStorage.setItem('cvState_' + cvId, isPositive);

            // Diğer butonların renklerini sıfırla ve tıklanan butonun rengini ayarla
            updateButtonColor(card, isPositive);

            // Formdaki 'state' değerini güncelle
            button.closest('form').find('input[name="state"]').val(isPositive);
        });

        // Buton renklerini güncelleme fonksiyonu
        function updateButtonColor(card, isPositive) {
            card.find('.btn-positive, .btn-negative').css('background-color', ''); // Tüm butonların rengini sıfırla

            if (isPositive) {
                card.find('.btn-positive').css('background-color', '#23d92a'); // Olumlu için yeşil
            } else {
                card.find('.btn-negative').css('background-color', '#f33415'); // Olumsuz için kırmızı
            }
        }
    });
</script>

  
<script>
    // Modal kontrol fonksiyonları
    function openNoteModal(cvId) {
        document.getElementById('noteCvId').value = cvId;
        document.getElementById('noteModal').style.display = 'block';
    }

    document.getElementsByClassName('close')[0].onclick = function () {
        document.getElementById('noteModal').style.display = 'none';
    }

    // AJAX isteği
    $(document).on('submit', '#noteForm', function (e) {
        e.preventDefault();
        var formData = $(this).serialize();
        $.ajax({
            url: '/CompanyAccount/AddNote',
            type: 'POST',
            data: formData,
            success: function (response) {
                // Başarılı yanıt işleme
                document.getElementById('noteModal').style.display = 'none';
            },
            error: function (error) {
                // Hata işleme
            }
        });
    });

    // Not Ekleme butonlarına modal açma işlevini ata
    $(document).on('click', '.add-note', function () {
        var cvId = $(this).closest('.business-card').find('.cvStateForm input[name="cvId"]').val();
        openNoteModal(cvId);
    });
</script>

<script>
    function openMeetingModal(cvId) {
        document.getElementById('meetingCvId').value = cvId;
        document.getElementById('meetingModal').style.display = 'block';
    }

    // Sayfa yüklendiğinde tarih inputunu bugünün tarihi ile doldur
    document.addEventListener('DOMContentLoaded', function () {
        var today = new Date().toISOString().split('T')[0];
        document.getElementById("meetingDate").setAttribute('min', today);
    });

    // Modal kapatma butonu
    $(document).on('click', '.close', function () {
        $('#meetingModal').hide();
    });

    // Form gönderildiğinde veriyi işle ve modalı kapat
    document.getElementById('meetingForm').addEventListener('submit', function (e) {
        e.preventDefault();
        var formData = new FormData(this);

        fetch('/CompanyAccount/AddMeetingDate', {
            method: 'POST',
            body: formData
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    document.getElementById('meetingModal').style.display = 'none';
                } else {
                    alert(data.message);
                }
            })
            .catch(error => {
                alert("Bir hata oluştu.");
            });
    });

    // "Toplantı Ekle" butonlarına modal açma işlevini ata
    $(document).on('click', '.add-meeting', function () {
        // cvId değerini, butonun bulunduğu yapıdan al
        var cvId = $(this).closest('.business-card').find('.cvStateForm input[name="cvId"]').val();
        openMeetingModal(cvId);
    });
</script>